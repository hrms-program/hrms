package com.paladin.common.controller.sys;

<#list imports as import>import ${import};\n</#list>

import com.paladin.framework.core.ControllerSupport;
import com.paladin.framework.web.response.CommonResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.validation.Valid;

@Controller
@RequestMapping("${baseRequestMapping}")
public class ${upperModelName}Controller extends ControllerSupport {

    @Autowired
    private ${upperModelName}Service ${lowerModelName}Service;

    @RequestMapping("/index")
    public String index() {
        return "${indexPage}";
    }

    @RequestMapping("/find")
    @ResponseBody
    public Object find(${upperModelName}Query query) {
        return CommonResponse.getSuccessResponse(${lowerModelName}Service.searchAll(query));
    }

    @RequestMapping("/find/page")
    @ResponseBody
    public Object findPage(${upperModelName}Query query) {
        return CommonResponse.getSuccessResponse(${lowerModelName}Service.searchPage(query));
    }

    @RequestMapping("/view")
    public String view(@RequestParam String id, Model model) {
        ${upperModelName} ${lowerModelName} = ${lowerModelName}Service.get(id);
        if (${lowerModelName} == null)
            ${lowerModelName} = new ${upperModelName}();
        model.addAttribute("${lowerModelName}", ${lowerModelName});
        return "${viewPage}";
    }

    @RequestMapping("/add/input")
    public String addInput(Model model) {
        model.addAttribute("${lowerModelName}", new ${upperModelName}());
        return "${editPage}";
    }

    @RequestMapping("/edit/input")
    public String editInput(@RequestParam String id, Model model) {
        ${upperModelName} ${lowerModelName} = ${lowerModelName}Service.get(id);
        if (null == ${lowerModelName}) {
            ${lowerModelName} = new ${upperModelName}();
        }
        model.addAttribute("${lowerModelName}", ${lowerModelName});
        return "${editPage}";
    }

    @RequestMapping("/save")
    @ResponseBody
    public Object save(@Valid ${upperModelName} ${lowerModelName}, BindingResult bindingResult) {
        if (bindingResult.hasErrors()) return validErrorHandler(bindingResult);
        return CommonResponse.getResponse(${lowerModelName}Service.saveOrUpdate(${lowerModelName}));
    }

    @RequestMapping("/delete")
    @ResponseBody
    public Object delete(@RequestParam String id) {
        return CommonResponse.getResponse(${lowerModelName}Service.removeByPrimaryKey(id));
    }
}